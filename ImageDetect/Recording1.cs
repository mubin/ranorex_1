///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ImageDetect
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("0aec9f5e-e243-4136-bb8f-e2ba529a3197", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ImageDetectRepository repository.
        /// </summary>
        public static ImageDetectRepository repo = ImageDetectRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
            N2007 = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _N2007;

        /// <summary>
        /// Gets or sets the value of variable N2007.
        /// </summary>
        [TestVariable("7c8ed2fd-4605-4263-86c8-e2410f68667b")]
        public string N2007
        {
            get { return _N2007; }
            set { _N2007 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://www.kauffmantire.com/' with browser 'firefox' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("https://www.kauffmantire.com/", "firefox", "", false, false, false, false, false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to '2007' on item 'KauffmanTire.FormControlNgPristineNgUntouchedNg'.", repo.KauffmanTire.FormControlNgPristineNgUntouchedNgInfo, new RecordItemIndex(1));
            repo.KauffmanTire.FormControlNgPristineNgUntouchedNg.Element.SetAttributeValue("TagValue", "2007");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagName' from item 'KauffmanTire.FormControlNgPristineNgUntouchedNg' and assigning its value to variable 'N2007'.", repo.KauffmanTire.FormControlNgPristineNgUntouchedNgInfo, new RecordItemIndex(2));
            N2007 = repo.KauffmanTire.FormControlNgPristineNgUntouchedNg.Element.GetAttributeValueText("TagName");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='2007') on item 'KauffmanTire.FormControlNgPristineNgUntouchedNg'.", repo.KauffmanTire.FormControlNgPristineNgUntouchedNgInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.KauffmanTire.FormControlNgPristineNgUntouchedNgInfo, "TagValue", "2007");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", N2007, new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to 'Buick' on item 'KauffmanTire.FormControlNgPristineNgUntouchedNg1'.", repo.KauffmanTire.FormControlNgPristineNgUntouchedNg1Info, new RecordItemIndex(5));
            repo.KauffmanTire.FormControlNgPristineNgUntouchedNg1.Element.SetAttributeValue("TagValue", "Buick");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to 'Allure' on item 'KauffmanTire.FormControlNgPristineNgValidNgNot'.", repo.KauffmanTire.FormControlNgPristineNgValidNgNotInfo, new RecordItemIndex(6));
            repo.KauffmanTire.FormControlNgPristineNgValidNgNot.Element.SetAttributeValue("TagValue", "Allure");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '33556' with focus on 'KauffmanTire.Text'.", repo.KauffmanTire.TextInfo, new RecordItemIndex(7));
            repo.KauffmanTire.Text.PressKeys("33556");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
